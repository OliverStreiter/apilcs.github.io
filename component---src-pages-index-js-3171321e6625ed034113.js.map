{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/theme/WaterPlain0008_1_270.jpg","webpack:///./src/images/apilcs_trsp_202x202.png","webpack:///./src/components/seo.js","webpack:///./src/theme/apils-theme.js","webpack:///./src/theme/global-style.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","html_react_parser__WEBPACK_IMPORTED_MODULE_2__","html_react_parser__WEBPACK_IMPORTED_MODULE_2___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","Padded","styled","div","withConfig","displayName","componentId","IndexPage","_ref","data","a","createElement","title","Parser","markdownRemark","html","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","apils_theme","main","pageBg","createGlobalStyle","_templateObject","background","props","theme","Container","Header","header","Footer","footer","Layout","children","_856328897","react_default","Fragment","Helmet_default","rel","href","crossOrigin","styled_components_browser_esm","ApilsTheme","global_style","gatsby_browser_entry","to","src","ApilsLogo","alt","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-3171321e6625ed034113.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport Parser from \"html-react-parser\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nexport const query = graphql`\n  query {\n    markdownRemark(fileAbsolutePath: { regex: \"/.*/content/front-page.md/\" }) {\n      html\n    }\n  }\n`;\n\nconst Padded = styled.div`\n  padding: 20px 10px;\n`;\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Padded>{Parser(data.markdownRemark.html)}</Padded>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({ markdownRemark: PropTypes.object.isRequired }).isRequired\n};\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/WaterPlain0008_1_270-639e0f9bcb49e2df527b0af0da421ff2.jpg\";","module.exports = __webpack_public_path__ + \"static/apilcs_trsp_202x202-0d5e0d2ad01c2a8260c167d7b9586475.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","export default {\n  // main: \"hsl(230, 55%, 58%)\"\n  main: \"#508084\",\n  pageBg: \"white\"\n};\n","// Note: using typography.js includes normalize.css by default, unless\n//       the option to disable it is explicitly invoked.\n\nimport { createGlobalStyle } from \"styled-components\";\nimport background from \"./WaterPlain0008_1_270.jpg\";\n\nexport default createGlobalStyle`\n\n  html, body, #___gatsby {\n    height: 100%;\n  }\n\n  div[role=\"group\"][tabindex] {\n    height: 100%;\n  }\n\n  body {\n    padding: 0;\n    margin: 0;\n    background: url(${background});\n\n    &::before {\n      box-shadow: 0 0 10px rgba(0,0,0,.8);\n      content: \"\";\n      height: 10px;\n      left: 0;\n      position: fixed;\n      top: -10px;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n\n  a {\n    color: ${props => props.theme.main};\n  }\n`;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport ApilsTheme from \"../theme/apils-theme\";\nimport GlobalStyle from \"../theme/global-style\";\n\nimport ApilsLogo from \"../images/apilcs_trsp_202x202.png\";\n\nconst Container = styled.div`\n  background: ${props => props.theme.pageBg};\n  background-image: url(\"https://www.transparenttextures.com/patterns/simple-horizontal-light.png\");\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 1024px;\n  padding: 10px;\n  position: relative;\n\n  &::before,\n  &::after {\n    border-radius: 100px / 10px;\n    bottom: 10px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.8);\n    content: \"\";\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 10px;\n    z-index: -1;\n  }\n\n  &::after {\n    left: auto;\n    right: 10px;\n    transform: skew(8deg) rotate(3deg);\n  }\n\n  main {\n    flex-grow: 1;\n  }\n`;\n\nconst Header = styled.header`\n  border-bottom: 1px solid ${props => props.theme.main};\n  display: flex;\n  flex-direction: row-reverse;\n\n  > div {\n    flex-grow: 1;\n  }\n\n  h1 {\n    margin-bottom: 0;\n  }\n\n  h2 {\n    font-size: 1.2rem;\n    margin-top: 0.375rem;\n  }\n\n  img {\n    height: 120px;\n    margin: 5px 20px 5px 0;\n  }\n`;\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: flex-end;\n  padding-right: 1%;\n`;\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Helmet>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" crossOrigin />\n      </Helmet>\n      <ThemeProvider theme={ApilsTheme}>\n        <>\n          <GlobalStyle />\n          <Container>\n            <Header>\n              <div>\n                <h1>\n                  <Link to=\"/\">{data.site.siteMetadata.title}</Link>\n                </h1>\n                <h2>亞太島嶼與沿海研究期刊</h2>\n              </div>\n              <img src={ApilsLogo} alt=\"APILS Logo\" />\n            </Header>\n            <main>{children}</main>\n            <Footer>© {new Date().getFullYear()}, APILS</Footer>\n          </Container>\n        </>\n      </ThemeProvider>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}